---
title: "Math 260 R Help Sheet: Describing Quantitative Data"
format: 
    html: 
      toc: true
      html-math-method: katex
      number-depth: 3
      theme: flatly
      self-contained: true
execute:
  warning: false
editor: visual
---

```{r}
#| label: setup
#| include: false
#| warning: false
knitr::opts_chunk$set(echo = TRUE)
options(digits=6)
library(mosaic)
library(Lock5Data)
```

# Numerical Descriptions

To obtain basic descriptive numerical statistics for *one variable at a time*, we will typically use the `favstats()` function from the **mosaic** package. This command is illustrated below, showing descriptive statistics for the two variables **Systolic** and **HeartRate**:

```{r}
favstats(~Systolic, data = ICUAdmissions)
favstats(~HeartRate, data = ICUAdmissions)
```

To get summary statistics of *Systolic* for both categories of the *Status* variable, use the goal-formula template seen earlier:

```{r}
favstats(Systolic ~ Status, data = ICUAdmissions)
```

# Graphical Descriptions

## Histograms

Now we proceed to some graphical displays of the *Systolic* quantitative variable. We use the `gf_histogram()` function to obtain a histogram representing a single quantitative variable:

```{r}
gf_histogram(~Systolic, data = ICUAdmissions)
```

R suggests using the `binwidth` parameter to adjust the width of the interval spanned by individual bars. Try modifying `binwidth` using several different values. One is shown below for illustration:

```{r}
# Smaller binwidth shows more detail
gf_histogram(~Systolic, data = ICUAdmissions, binwidth = 5)
# Setting binwidth = 1 is extreme but it basically shows the histogram
# as a dotplot, each distinct value has a bar. 
gf_histogram(~Systolic, data = ICUAdmissions, binwidth = 1)
```

To compare Systolic rates of patients who lived (`Status = 1`) and died (`Status = 0`), we can use the `facets` option. I show one example here and others below. The `facets` option is quite general and allows histograms to be split by one or two variables at a time. To get a faceted plot, note that we use the vertical bar `|` on the keyboard.

```{r}
gf_histogram(~Systolic | Status ~ ., data = ICUAdmissions)
```

Here are some other modifications to try. The comments preceded by `#` tell what each command should do:

```{r,eval=FALSE}
# Add a label
gf_histogram(~Systolic, data = ICUAdmissions, xlab = "Systolic (mm Hg)")
# How about some color? Don't forget the quotes
gf_histogram(~Systolic, data = ICUAdmissions, fill = "darkorange", color = "black", title = "Go Hornets")  
# Separate Facets for categories of  Status side by side
gf_histogram(~Systolic | . ~ Status, data = ICUAdmissions)
# Separate Facets for categories of  Sex: one over the other
gf_histogram(~Systolic | Sex  ~ ., data = ICUAdmissions)
# Facet by two variables
gf_histogram(~Systolic | Sex ~ Status, data = ICUAdmissions)
# Omit cases with any NA values when necessary
gf_histogram(~Systolic | Sex ~ Status, data = na.omit(ICUAdmissions))
```

By default, R produces histograms in each case because the variable *Systolic* is quantitative. A list and examples of all the many colors available in R can be found [here](http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf) if you're curious.

## Boxplots

Another plot often of interest is a `boxplot`, which is a graphical depiction of the five number summary (min, $Q_1$, median, $Q_3$, maximum) with outliers, if present, plotted separately. Here is an example using `gf_boxplot()`:

```{r}
# Since Status is a 0-1 variable, we need to use the `factor()` function to tell R it's 
# actually categorical
# vertical boxplots
gf_boxplot(Systolic ~ factor(Status), data = ICUAdmissions)
```

Note that the command closely follows the `goal(y~x, data = mydata)` template. The `y` variable is the quantitative response variable and the `x` is the categorical factor or grouping variable. The command produces one box for every category of the `x` variable. Note below that reversing the variables changes the graph from vertical to horizontal.

```{r,eval=FALSE,tidy=FALSE}
# horizontal boxplots
gf_boxplot(factor(Status) ~ Systolic, data = ICUAdmissions, ylab = "Systolic (mm Hg)")
# Three variables in one boxplot is sometimes helpful
gf_boxplot(factor(Status) ~ Systolic, data = ICUAdmissions, fill = ~factor(Sex))
```
